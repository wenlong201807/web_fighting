
/*
执行上下文
默认，都会有一个全局执行上下文 ** 浏览器关闭的时候才会关闭

执行某个函数时，会临时创建一个函数内的局部执行上下文

执行上下文中有三个核心：
1.作用域链  【AO,SCOPED,VO】 // 取值的时候都是从 VO 中获取的
2.执行上下文栈  [压栈，出栈 ]
3.

执行上下文的生命周期：
1.创建阶段(预解析阶段) VO(var变量声明 function 函数声明) => AO(var function arguments 三个)
  查找当前作用域中的var 变量 function 函数声明，
  多个同名函数声明，以最后一个为准
  函数声明名与var变量同名，则函数名覆盖变量名，最后只保留函数声明
  函数表达式(此时赋值 undefined) 也是 变量声明  不是 函数声明
2.代码执行阶段
*/



/*
js  作用域 let  全局 函数 eval
js的作用域  属于静态作用域：是在定义时缺点。不同于其他语言的动态作用域

执行函数时，有执行上下文  简称 EC

全局上下文 ，函数上下文

变量对象  Variable Object  简称 VO  

作用域链  ， this



*/