
***如果想要完成插件组件的封装，而且让其能够更好的被应用
 站在巨人的肩膀上：二次封装，研究其特点和源码
 结合自己的实战经验

 // 目标
 1.插件封装的核心思想和API配置
 2.插件封装中css的三种处理方案
 3.Modal插件核心功能的研发
 4.Madal插件拖拽效果的实现
 5.基于发布订阅的回调函数管理
 6.Modal插件的模块化封装和调用

 有些插件是纯js的，不提供css
 有些ui库，是由js，由css的

 样式如何处理：
 1.全部写在插件中，
 一般以行内样式的方式，写给对应创建的元素：这样别人调用插件的时候，方便一些，直接导入js即可，可以不管样式，
 弊端：插件中的代码乱，而且不方便后期用户自定义样式

 2.在插件中动态导入link，导入外部资源样式
 优势:需要由网络才能获取网络的cdn样式

 3.js css 分离
 特点：需要用户单独导入css，导入的样式要避免和现有的样式的冲突，但是用户可以自己基于观看插件样式，进行样式的二次配置

 进行任何的插件/类库/框架的封装，最好采用oop面向对象模式
   可以创建类的实例，实例是单独的
   实例具备私有的属性，也具备一些公共的方法
   还可以基于继承等方式，实现多个插件之间的关联


 